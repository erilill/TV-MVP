% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecasting_functions.R
\name{forecast_local_factor_model}
\alias{forecast_local_factor_model}
\title{Forecast Local Factor Model}
\usage{
forecast_local_factor_model(
  returns,
  W,
  m,
  bandwidth,
  kernel_func = epanechnikov_kernel,
  lambda = 0.1
)
}
\arguments{
\item{returns}{A matrix of asset returns, where rows represent time periods (T) and columns represent assets (p).}

\item{W}{An integer specifying the rolling window size used for estimation.}

\item{m}{An integer specifying the maximum number of factors to use in the PCA.}

\item{bandwidth}{A numeric value for the kernel bandwidth, used to calculate the boundary kernel weights.}

\item{kernel_func}{A kernel function used for weighting. The default is \code{\link{epanechnikov_kernel}}.}

\item{lambda}{A numeric penalization parameter used in the estimation of residual covariance matrices. Default is 0.1.}
}
\value{
A list containing:
\describe{
  \item{\code{forecasts}}{A T x p matrix of forecasted returns, where \code{NA} values are present for periods \code{1:W}.}
  \item{\code{est_covariances}}{A list of length T, where each element is a p x p estimated covariance matrix.}
  \item{\code{residual_covariances}}{A list of length T, where each element is a p x p estimated residual covariance matrix.}
  \item{\code{optimal_weights}}{A list of length T, where each element is a p-dimensional vector of portfolio weights.}
}
}
\description{
This function implements a local factor model to forecast asset returns
using a time-varying covariance structure estimated through kernel-weighted PCA.
}
\details{
The function forecasts returns using the following steps:
\enumerate{
  \item Computes kernel weights for past observations.
  \item Applies weighted PCA to extract factors and loadings.
  \item Estimates factor and residual covariance matrices.
  \item Combines factor and residual covariances to compute the time-varying covariance matrix.
  \item Computes optimal portfolio weights based on the estimated covariance matrix.
}

The forecasts are generated for time periods from \code{(W + 1)} to \code{T},
as earlier periods are used for model initialization.
}
\examples{
set.seed(123)
T <- 200  # Number of time periods
p <- 50   # Number of assets
returns <- matrix(rnorm(T * p, mean = 0.001, sd = 0.02), ncol = p)
bandwidth <- 0.1
W <- 50
m <- 3

results <- forecast_local_factor_model(
  returns = returns,
  W = W,
  m = m,
  bandwidth = bandwidth,
  kernel_func = epanechnikov_kernel,
  lambda = 0.1
)

# Access the forecasted returns
head(results$forecasts)

}
\seealso{
\code{\link{epanechnikov_kernel}}, \code{\link{estimate_residual_cov}}, \code{\link{compute_optimal_weights}}
}
