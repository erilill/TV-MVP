% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca_function.R
\name{localPCA}
\alias{localPCA}
\title{Perform Local Principal Component Analysis (PCA) with Optimal Factor Selection}
\usage{
localPCA(returns, bandwidth, m, kernel_func = epanechnikov_kernel)
}
\arguments{
\item{returns}{A numeric matrix of asset returns with \eqn{T} rows (time periods) and \eqn{p} columns (assets).}

\item{bandwidth}{A numeric value indicating the bandwidth parameter defining the window around each time period.
Defaults to the value computed using Silverman's rule of thumb.}

\item{m}{An integer specifying the maximum number of factors to consider during optimal factor selection. Defaults to \code{10}.}

\item{kernel_func}{A function representing the kernel used for weighting. Typically, an
Epanechnikov kernel or another boundary kernel function. Defaults to \code{epanechnikov_kernel}.}
}
\value{
A list containing:
\describe{
  \item{\code{factors_list}}{List of numeric matrices. Each element corresponds to the factor scores
  for a specific time period beyond the initial window.}
  \item{\code{loadings_list}}{List of numeric matrices. Each element corresponds to the factor loadings
  for a specific time period beyond the initial window.}
}
}
\description{
This function conducts a comprehensive local PCA on asset returns by first selecting
the optimal number of factors using an information criterion and then extracting the
corresponding factor scores and loadings for each time period within a specified bandwidth.
}
\details{
The function performs the following steps:
\enumerate{
  \item Computes the optimal number of factors (\code{m}) by minimizing an information criterion
  using the \code{select_optimal_factors} function.
  \item Iterates over each time period beyond the initial window defined by \code{bandwidth}.
  \item For each time period \eqn{t}, performs a local PCA using the \code{local_pca} function
  to extract factor scores and loadings.
  \item Aggregates the factor scores and loadings into \code{factors_list} and \code{loadings_list}, respectively.
}
The function also provides informative messages regarding the number of factors selected.
}
\examples{
# Load necessary libraries
library(ggplot2)

# Simulate data for 50 assets over 200 time periods
set.seed(123)
T <- 200
p <- 50
returns <- matrix(rnorm(T * p, mean = 0.001, sd = 0.02), ncol = p)

# Define an Epanechnikov kernel function (assuming it's defined elsewhere)
epanechnikov_kernel <- function(u) {
  ifelse(abs(u) <= 1, 0.75 * (1 - u^2), 0)
}

# Perform local PCA with default parameters
pca_results <- localPCA(returns)

# Access factor scores and loadings for time period 100
factors_time_100 <- pca_results$factors_list[[100]]
loadings_time_100 <- pca_results$loadings_list[[100]]

# Display the results
print(factors_time_100)
print(loadings_time_100)

}
