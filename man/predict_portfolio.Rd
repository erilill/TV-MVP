% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecasting_functions.R
\name{predict_portfolio}
\alias{predict_portfolio}
\title{Predict Optimal Portfolio Weights Using Time-Varying Covariance Estimation}
\usage{
predict_portfolio(
  returns,
  horizon = 1,
  max_factors = 3,
  kernel_func = epanechnikov_kernel,
  min_return = NULL,
  rf = NULL
)
}
\arguments{
\item{returns}{A numeric matrix of asset returns (T x p), where T is the number of time periods and p is the number of assets.}

\item{horizon}{Integer. Investment horizon over which expected return and risk are computed. Default is `1`.}

\item{max_factors}{Integer. The maximum number of latent factors to consider in the Local PCA model. Default is `3`.}

\item{kernel_func}{Function. A kernel function used for weighting observations in Local PCA. Default is `epanechnikov_kernel`.}

\item{min_return}{Optional numeric. If provided, the function also computes a Minimum Variance Portfolio
that meets this minimum expected return constraint.}

\item{rf}{The risk-free rate (scalar). 
If `NULL`, it is assumed to be `0`. Default is `NULL`.}
}
\value{
A list with at least one component:
- **`GMV`**: A list containing:
    - `weights`: The optimal MVP weights (vector of length `p`).
    - `expected_return`: Expected return of the GMVP.
    - `risk`: Standard deviation (risk) of the GMVP.

If `min_return` is specified, an additional component is returned:
- **`MinVarWithReturnConstraint`**: A list containing:
    - `weights`: The optimal MVP weights under the return constraint.
    - `expected_return`: Expected return of the constrained MVP.
    - `risk`: Standard deviation (risk) of the constrained MVP.
}
\description{
This function estimates the Global Minimum Variance Portfolio (MVP)
and optionally a Minimum Variance Portfolio (MVP) with a return constraint, 
using time-varying covariance estimation based on Local Principal Component Analysis (Local PCA).
}
\details{
The function implements a time-varying PCA approach to estimate latent factor structures 
and uses a sparse residual covariance estimation method to improve covariance matrix estimation.
The covariance matrix is used to determine the global minimum variance portfolio (MVP). 
The number of factors is determined by a BIC-type information criterion using the function 
`determine_factors`, and the bandwidth is determined by Silverman's rule of thumb. If 
`min_return` is provided, solves a quadratic optimization problem to find an MVP 
that satisfies the expected return constraint.
}
\examples{
\dontrun{
# Simulate random asset returns (200 time periods, 20 assets)
set.seed(123)
returns <- matrix(rnorm(200 * 20, mean = 0, sd = 0.02), ncol = 20)

# Compute GMVP
result <- predict_portfolio(returns)
print(result$GMV$weights)

# Compute GMVP with return constraint
result <- predict_portfolio(returns, min_return = 0.005)
print(result$MinVarWithReturnConstraint$weights)
}

}
